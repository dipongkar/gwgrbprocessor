#!/usr/bin/perl

require '/home/grb.exttrig/Online/O2/processor/exttrig_utils.pl';
require '/home/grb.exttrig/Online/O2/processor/exttrig_params.pl';

#=== Get user name ===#
$USERNAME = `whoami`;
chomp($USERNAME);

#=== Specify local working directories ===#
$HOMEDIR    = sprintf "/home/%s", $USERNAME;
$GRBDIR     = sprintf "%s/Online/%s/gdb", $HOMEDIR, $LIGORUN;
$SCRIPTSDIR = sprintf "%s/Online/%s/processor", $HOMEDIR, $LIGORUN;
$WEBDIR     = sprintf "%s/Online/%s/processor/web", $HOMEDIR, $LIGORUN;
$JOBSDIR    = sprintf "%s/runs/CBC", $SCRIPTSDIR;
$PUBSERVER_SED = $PUBSERVER;
my $find = "//";
my $replace = "\\/\\/";
$PUBSERVER_SED =~s/$find/$replace/g;
$RESULTSURL = sprintf "%s\\/~%s\\/grb\\/online\\/%s", $PUBSERVER_SED, $USERNAME, $LIGORUN;
$PUBLICDIR  = sprintf "%s/public_html/grb/online/%s", $HOMEDIR, $LIGORUN;
$MAINURL    = sprintf "%s/~%s/web/%s/OnlineGRB_page_%s.html", $PUBSERVER, $USERNAME, $LIGORUN, $LIGORUN;

#=== Specify output html file ===#
$htmlFile = sprintf "%s/OnlineGRB_page_%s.html", $WEBDIR, $LIGORUN;

#=== Specify line offset for job status line in html file ===#
$lineOffset = 11;

#=== Open input open-box status file ===#
$openboxFile = sprintf "%s/openboxjobs_cohptf_%s.log", $SCRIPTSDIR, $LIGORUN;
$tempFile    = sprintf "%s/openboxjobs_cohptf_%s_temp.log", $SCRIPTSDIR, $LIGORUN;
open OPENBOX, "<$openboxFile"
  or die "Error opening input open-box status file $openboxFile: $!";
chomp(@openboxJobs = <OPENBOX>);
close OPENBOX;

#=== Loop through GRBs ===#
foreach $openboxJob (@openboxJobs) {

  ($grbName,$grbGPS,$grbDate,$ifoString,$grbSat,$openjobCluster,$openjobStatus) = split(' ',$openboxJob);

    if ($openjobStatus ne 'PROCESSED') {
         #=== Set default open box link ===#
        $resultsLink = '';

    #=== Set default open box link ===#
        $openboxLink = '';

        $RUN_DIRECTORY = sprintf "%s/GRB%s", $JOBSDIR, $grbName;
        $PPDir = sprintf "%s/GRB%s/GRB%s/post_processing", $JOBSDIR, $grbName, $grbName;
        $openboxscript = sprintf "sh %s/open_the_box.sh", $PPDir;
        system $openboxscript;

        #=== Note finish time of analysis ===#
        $gpsTime    = `lalapps_tconvert now`;
        chomp($gpsTime);
        $timeString = `lalapps_tconvert $gpsTime`;
        chomp($timeString);

        #=== Calculate processing time in hours ===#
        $processTime = 0;
        $processTime = ($gpsTime - $grbGPS)/3600.0;
        $processTime = sprintf "%5.3f", $processTime;
        if ($processTime < 0) {
          $processTime = 0;
        }

        #=== Get line number of this GRB in the monitor file ===#
        $sedCommand = sprintf "sed -n '/^%s /=' %s", $grbName, $openboxFile;
        $lineNumber = -1;
        $lineNumber = `$sedCommand`;
        chomp($lineNumber);

        if ($lineNumber =~ /^[1-9]/) {
          $monitorString = sprintf "%s %10.0f %s %s %s %10s %-9s %11.5f %s", 
                                    $grbName, $grbGPS, $grbDate, $ifoString, $grbSat, $openjobCluster, 'PROCESSED', 
                                    $processTime, $timeString;
          $sedCommand = sprintf "sed '%ds/.*/%s/' %s > %s",
                        $lineNumber, $monitorString, $openboxFile, $tempFile;
          system $sedCommand;

          $cpCommand = sprintf "cp %s %s", $tempFile, $openboxFile;
          system $cpCommand;
        }

        #=== Specify link with results ===#
        $openboxLink = sprintf "%s\\/GRB%s\\/GRB%s_OPEN\\/summary.html", $RESULTSURL, $grbName, $grbName;

        #=== Update search status web page ===#
        $searchStatusTable = {};
        $searchStatusTable->{'GRB_NAME'} = $grbName;
        $searchStatusTable->{'IFO_STRING'}  = $ifoString;

        updateWebStatusPTF($searchStatusTable,$htmlFile,$lineOffset,$resultsLink,$openboxLink);
        
        #=== Annotate the GraceDB external trigger event ===#
        if ($ANNOTATEFLAG eq 'YES') {
        $loudNumbersFile = sprintf "%s/output/ONSOURCE/efficiency/loud_numbers.txt", $PPDir;
        if (-e $loudNumbersFile) {
           open LOUDNUMBERS, "<$loudNumbersFile"
              or die "Error opening loud numbers file $loudNumbersFile: $!";
           chomp($onSourceFAP = <LOUDNUMBERS>);
           close LOUDNUMBERS;
        } else {
            $onSourceFAP = ();
        }

        if ($onSourceFAP >= 0 and $onSourceFAP <= $FAP_TH and $onSourceFAP ne "") {
          $FAP = $onSourceFAP;
          $FAP = sprintf("%.6f", $FAP);
          $annotateFile = sprintf "%s/annotateGraceDB_CBC_event_template.py", $SCRIPTSDIR;
          $catCommand = sprintf "cat %s | sed -e 's/EVENT_ID/%s/g' -e 's/USERNAME/%s/g' -e 's/LIGORUN/%s/g' -e 's/FAP_VAL/%s/g' -e 's/PUBSERVER/%s/g'> annotateGraceDB.py", $annotateFile, $grbName, $USERNAME, $LIGORUN, $FAP, $PUBSERVER_SED;
          system $catCommand;
          $annotateCommand = sprintf "python annotateGraceDB.py";
          system $annotateCommand;
          $rmCommand = sprintf "rm -f annotateGraceDB.py";
          system $rmCommand;
        } else {
          if ($onSourceFAP >= 0 and $onSourceFAP > $FAP_TH and $onSourceFAP ne "") {
          $FAP = $onSourceFAP;
          $FAP = sprintf("%.6f", $FAP);
          } else {
          $FAP = "NaN";
          }
          $annotateFile = sprintf "%s/annotateGraceDB_CBC_noevent_template.py", $SCRIPTSDIR;
          $catCommand = sprintf "cat %s | sed -e 's/EVENT_ID/%s/g' -e 's/USERNAME/%s/g' -e 's/LIGORUN/%s/g' -e 's/FAP_VAL/%s/g' -e 's/PUBSERVER/%s/g'> annotateGraceDB.py", $annotateFile, $grbName, $USERNAME, $LIGORUN, $FAP, $PUBSERVER_SED;
          system $catCommand;
          $annotateCommand = sprintf "python annotateGraceDB.py";
          system $annotateCommand;
          $rmCommand = sprintf "rm -f annotateGraceDB.py";
          system $rmCommand;
        }

       #=== Do Omega scan for loudest event and annotate GraceDB =====#
       if ($onSourceFAP ne "" and $onSourceFAP >= 0) {
          if ($ifoString eq 'H1L1') {
          $awkCommand = sprintf "awk 'c&&!--c;/table class/{c=22}' %s/output/ONSOURCE/efficiency/loudest_events.html", $PPDir;
          } else {
          $awkCommand = sprintf "awk 'c&&!--c;/table class/{c=21}' %s/output/ONSOURCE/efficiency/loudest_events.html", $PPDir;
          }
          $awkComandResult = -1;
          $awkComandResult = `$awkCommand`;
          chomp($awkComandResult);
          my @stuff = $awkComandResult =~ />([^<]+)</g;
          $statistics = join (" ", @stuff);
          $peakGPS = substr($awkComandResult, 4, -5);

          if ($ifoString eq 'H1L1') {
             $ifo_H1 = "H1";    
             $OmegaScan = sprintf "nohup /home/grb.exttrig/wdq/%s/wdqER %s %s > /home/grb.exttrig/wdq/%s/log/%s_%s.txt &",$LIGORUN,$ifo_H1,$peakGPS,$LIGORUN,$ifo_H1,$peakGPS;
             system $OmegaScan;
             $annotateFile = sprintf "%s/annotateGraceDB_CBC_omega_template.py", $SCRIPTSDIR;
             $catCommand = sprintf "cat %s | sed -e 's/EVENT_ID/%s/g' -e 's/USERNAME/%s/g' -e 's/LIGORUN/%s/g' -e 's/IFO/%s/g' -e 's/GPS/%s/g' -e 's/PUBSERVER/%s/g'> annotateGraceDB.py", $annotateFile, $grbName, $USERNAME, $LIGORUN, $ifo_H1, $peakGPS, $PUBSERVER_SED;
             system $catCommand;
             $annotateCommand = sprintf "python annotateGraceDB.py";
             system $annotateCommand;
             $rmCommand = sprintf "rm -f annotateGraceDB.py";
             system $rmCommand;

             $ifo_L1 = "L1";
             $OmegaScan = sprintf "nohup /home/grb.exttrig/wdq/%s/wdqER %s %s > /home/grb.exttrig/wdq/%s/log/%s_%s.txt &",$LIGORUN,$ifo_L1,$peakGPS,$LIGORUN,$ifo_L1,$peakGPS;
             system $OmegaScan;
             $annotateFile = sprintf "%s/annotateGraceDB_CBC_omega_template.py", $SCRIPTSDIR;
             $catCommand = sprintf "cat %s | sed -e 's/EVENT_ID/%s/g' -e 's/USERNAME/%s/g' -e 's/LIGORUN/%s/g' -e 's/IFO/%s/g' -e 's/GPS/%s/g' -e 's/PUBSERVER/%s/g'> annotateGraceDB.py", $annotateFile, $grbName, $USERNAME, $LIGORUN, $ifo_L1, $peakGPS, $PUBSERVER_SED;
             system $catCommand;
             $annotateCommand = sprintf "python annotateGraceDB.py";
             system $annotateCommand;
             $rmCommand = sprintf "rm -f annotateGraceDB.py";
             system $rmCommand;
             } else {
             $OmegaScan = sprintf "nohup /home/grb.exttrig/wdq/%s/wdqER %s %s > /home/grb.exttrig/wdq/%s/log/%s_%s.txt &",$LIGORUN,$ifoString,$peakGPS,$LIGORUN,$ifoString,$peakGPS;
             system $OmegaScan;
             $annotateFile = sprintf "%s/annotateGraceDB_CBC_omega_template.py", $SCRIPTSDIR;
             $catCommand = sprintf "cat %s | sed -e 's/EVENT_ID/%s/g' -e 's/USERNAME/%s/g' -e 's/LIGORUN/%s/g' -e 's/IFO/%s/g' -e 's/GPS/%s/g' -e 's/PUBSERVER/%s/g'> annotateGraceDB.py", $annotateFile, $grbName, $USERNAME, $LIGORUN, $ifoString, $peakGPS, $PUBSERVER_SED;
             system $catCommand;
             $annotateCommand = sprintf "python annotateGraceDB.py";
             system $annotateCommand;
             $rmCommand = sprintf "rm -f annotateGraceDB.py";
             system $rmCommand;
             }} else {
             $OmegaScan = "Null";
             }  


          }

        &sendResultsMessage;
      }
  #=== Endif status is not PROCESSED ===#
}

sub sendResultsMessage {

  $emailsFile   = sprintf "%s/eventadvocate/%s_grbemails.txt", $SCRIPTSDIR, $grbName;
  $messagesFile = sprintf "%s/grbmessages_%s.log", $SCRIPTSDIR, $LIGORUN;

  #=== Specify pages with results ===#
  $resultsPageClosed = sprintf "%s/GRB%s/GRB%s_CLOSED/summary.html", $RESULTSURL, $grbName, $grbName;
  $resultsPageOpen   = sprintf "%s/GRB%s/GRB%s_OPEN/summary.html", $RESULTSURL, $grbName, $grbName;

  $eheaderTable = {};
  $eheaderTable->{'SUBJECT'} = sprintf "[PyGRB] GRB %s open-box", $grbName;

  #=== Construct the message ===#
  $noticeString = sprintf "GRB %s box has been opened, %8.3f hours after the trigger.", 
                               $grbName, $processTime;
  $noticeString = sprintf "%s\n\nClosed box results:", $noticeString;
  $noticeString = sprintf "%s\n<%s>", $noticeString, $resultsPageClosed;
  $noticeString = sprintf "%s\n\nOpen box results:", $noticeString;
  $noticeString = sprintf "%s\n<%s>", $noticeString, $resultsPageOpen;
  $noticeString = sprintf "%s\n\nMain results page:", $noticeString;
  $noticeString = sprintf "%s\n<%s>\n", $noticeString, $MAINURL;

  $eheaderTable->{'MESSAGE'} = $noticeString;

  printf "$noticeString\n";

  #=== Send the message ===#
  grbNotify($eheaderTable,$emailsFile,$messagesFile);
}

#=== End monitorOpenJobs ===#
